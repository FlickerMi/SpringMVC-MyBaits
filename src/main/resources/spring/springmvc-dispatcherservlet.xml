<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 静态资源解析，如 ：js、css、img-->
    <mvc:resources location="/upload/"  mapping="/upload/**" />
    <mvc:resources location="/static/"  mapping="/static/**" />

    <!-- 5.配置视图解析器ViewResolver-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 4.扫描controller注解,多个包中间使用半角逗号分隔 -->
    <context:component-scan base-package="cn.notemi.controller"/>
    <!-- 配置扫描 springmvc 的 controller 和 service 的包 -->
    <!--<context:component-scan base-package="cn.notemi"/>-->

    <!-- 2/3使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
	    mvc:annotation-driven默认加载很多的参数绑定方法，比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上
	    边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
	    实际开发时使用mvc:annotation-driven
	 -->
    <mvc:annotation-driven conversion-service="conversionService" validator="validator"/>

    <!-- 自定义参数绑定 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!-- 自定义的转换器的集合 -->
        <property name="converters">
            <set>
                <!-- 日期类型转换器 -->
                <bean class="cn.notemi.utils.converter.DateConverter"/>
                <!-- 其他类型转换器 -->
            </set>
        </property>
    </bean>

    <!-- 校验器 -->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!-- hibernate校验器-->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
        <!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource" />
    </bean>
    <!-- 校验错误信息配置文件 -->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!-- 资源文件名-->
        <property name="basenames">
            <list>
                <value>classpath:CustomValidationMessages</value>
            </list>
        </property>
        <!-- 资源文件编码格式 -->
        <property name="fileEncodings" value="utf-8" />
        <!-- 对资源文件内容缓存时间，单位秒 -->
        <property name="cacheSeconds" value="120" />
    </bean>

    <!-- 配置ViewResolver。 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后。 -->
    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
        <!--<property name="order" value="1"/>-->

        <!--<property name="defaultViews">-->
            <!--<list>-->
                <!--&lt;!&ndash; JSON View &ndash;&gt;-->
                <!--<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">-->
                <!--</bean>-->
            <!--</list>-->
        <!--</property>-->
        <!--&lt;!&ndash;<property name="ignoreAcceptHeader" value="true" />&ndash;&gt;-->
    <!--</bean>-->

    <!-- 配置全局异常处理器，只能有一个 -->
    <!--<bean class="cn.notemi.exception.GlobalUserExceptionResolver"/>-->

    <!-- 配置文件上传组件 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="-1"/>
    </bean>

    <!-- 配置全局的拦截器 -->
    <mvc:interceptors>
        <!-- 配置登录验证拦截器 -->
        <mvc:interceptor>
            <!-- path 指定对何种请求的 url 拦截， /** 表示对所有的url及子url进行拦截 -->
            <mvc:mapping path="/**"/>
            <bean class="cn.notemi.interceptor.LoginInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
</beans>
